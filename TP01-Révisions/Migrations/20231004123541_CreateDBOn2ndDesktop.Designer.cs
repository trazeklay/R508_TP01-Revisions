// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using TP01_Révisions.Models.EntityFramework;

#nullable disable

namespace TP01_Révisions.Migrations
{
    [DbContext(typeof(TP01DbContext))]
    [Migration("20231004123541_CreateDBOn2ndDesktop")]
    partial class CreateDBOn2ndDesktop
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.22")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("TP01_Révisions.Models.EntityFramework.Marque", b =>
                {
                    b.Property<int>("IdMarque")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("mar_id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("IdMarque"));

                    b.Property<string>("NomMarque")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("mar_name");

                    b.HasKey("IdMarque")
                        .HasName("pk_mar");

                    b.ToTable("t_e_marque_mar");
                });

            modelBuilder.Entity("TP01_Révisions.Models.EntityFramework.Produit", b =>
                {
                    b.Property<int>("IdProduit")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("pdt_id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("IdProduit"));

                    b.Property<string>("Description")
                        .HasColumnType("text")
                        .HasColumnName("pdt_description");

                    b.Property<int>("IdMarque")
                        .HasColumnType("integer")
                        .HasColumnName("pdt_mar_id");

                    b.Property<int>("IdType")
                        .HasColumnType("integer")
                        .HasColumnName("pdt_tpd_id");

                    b.Property<string>("NomPhoto")
                        .HasColumnType("text")
                        .HasColumnName("pdt_photo_name");

                    b.Property<string>("NomProduit")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("pdt_name");

                    b.Property<int>("StockMax")
                        .HasColumnType("integer")
                        .HasColumnName("pdt_stock_max");

                    b.Property<int>("StockMin")
                        .HasColumnType("integer")
                        .HasColumnName("pdt_stock_min");

                    b.Property<int>("StockReel")
                        .HasColumnType("integer")
                        .HasColumnName("pdt_stock_reel");

                    b.Property<string>("UriPhoto")
                        .HasColumnType("text")
                        .HasColumnName("pdt_photo_uri");

                    b.HasKey("IdProduit")
                        .HasName("pk_pdt");

                    b.HasIndex("IdMarque");

                    b.HasIndex("IdType");

                    b.ToTable("t_e_produit_pdt");
                });

            modelBuilder.Entity("TP01_Révisions.Models.EntityFramework.TypeProduit", b =>
                {
                    b.Property<int>("IdTypeProduit")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("tpd_id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("IdTypeProduit"));

                    b.Property<string>("NomTypeProduit")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("tpd_name");

                    b.HasKey("IdTypeProduit")
                        .HasName("pk_tpd");

                    b.ToTable("t_e_typeproduit_tpd");
                });

            modelBuilder.Entity("TP01_Révisions.Models.EntityFramework.Produit", b =>
                {
                    b.HasOne("TP01_Révisions.Models.EntityFramework.Marque", "MarquesProduits")
                        .WithMany("ProduitsMarque")
                        .HasForeignKey("IdMarque")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("fk_pdt_mar");

                    b.HasOne("TP01_Révisions.Models.EntityFramework.TypeProduit", "TypesProduitProduit")
                        .WithMany("ProduitsTypesProduit")
                        .HasForeignKey("IdType")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("fk_pdt_tpd");

                    b.Navigation("MarquesProduits");

                    b.Navigation("TypesProduitProduit");
                });

            modelBuilder.Entity("TP01_Révisions.Models.EntityFramework.Marque", b =>
                {
                    b.Navigation("ProduitsMarque");
                });

            modelBuilder.Entity("TP01_Révisions.Models.EntityFramework.TypeProduit", b =>
                {
                    b.Navigation("ProduitsTypesProduit");
                });
#pragma warning restore 612, 618
        }
    }
}
